"""Initial

Revision ID: d0cce8ea75fa
Revises:
Create Date: 2021-10-07 19:46:10.485928

"""
import sqlalchemy as sa

from alembic import op


# revision identifiers, used by Alembic.
revision = "d0cce8ea75fa"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "access_object_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", "name"),
    )
    op.create_table(
        "access_owner_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", "name"),
    )
    op.create_table(
        "group",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("user_list", sa.String(), nullable=False),
        sa.Column("comment", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "secret",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("secret", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "submodule",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("version", sa.String(), nullable=False),
        sa.Column("functions", sa.JSON(), nullable=False),
        sa.Column("min_module_version", sa.String(), nullable=False),
        sa.Column("release_date", sa.DateTime(), nullable=False),
        sa.Column("files_url", sa.String(), nullable=False),
        sa.Column("database_type", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "access_rule",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("access_owner_type_id", sa.Integer(), nullable=False),
        sa.Column("access_owner_id", sa.Integer(), nullable=False),
        sa.Column("access_object_type_id", sa.Integer(), nullable=False),
        sa.Column("access_object_id", sa.Integer(), nullable=False),
        sa.Column("access_type", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["access_object_type_id"],
            ["access_object_type.id"],
        ),
        sa.ForeignKeyConstraint(
            ["access_owner_type_id"],
            ["access_owner_type.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "database_connection",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username_secret_id", sa.Integer(), nullable=True),
        sa.Column("password_secret_id", sa.Integer(), nullable=True),
        sa.Column("host_secret_id", sa.Integer(), nullable=True),
        sa.Column("port_secret_id", sa.Integer(), nullable=True),
        sa.Column("connection_kwargs", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["host_secret_id"],
            ["secret.id"],
        ),
        sa.ForeignKeyConstraint(
            ["password_secret_id"],
            ["secret.id"],
        ),
        sa.ForeignKeyConstraint(
            ["port_secret_id"],
            ["secret.id"],
        ),
        sa.ForeignKeyConstraint(
            ["username_secret_id"],
            ["secret.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "server_credentials",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("ssh_key", sa.Integer(), nullable=True),
        sa.Column("password", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["password"],
            ["secret.id"],
        ),
        sa.ForeignKeyConstraint(
            ["ssh_key"],
            ["secret.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username_secret_id", sa.Integer(), nullable=True),
        sa.Column("password_secret_id", sa.Integer(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["password_secret_id"],
            ["secret.id"],
        ),
        sa.ForeignKeyConstraint(
            ["username_secret_id"],
            ["secret.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "installation",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("installation_date", sa.DateTime(), nullable=False),
        sa.Column("submodule_id", sa.Integer(), nullable=False),
        sa.Column("connection_data_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["connection_data_id"],
            ["database_connection.id"],
        ),
        sa.ForeignKeyConstraint(
            ["submodule_id"],
            ["submodule.id"],
        ),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "servers",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("ip", sa.String(), nullable=True),
        sa.Column("credential_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["credential_id"],
            ["server_credentials.id"],
        ),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "database",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("installation", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["installation"],
            ["installation.name"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "schema",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("database", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["database"],
            ["database.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "table",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("schema", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["schema"],
            ["schema.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "column",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("datatype", sa.String(), nullable=True),
        sa.Column("table", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["table"],
            ["table.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("column")
    op.drop_table("table")
    op.drop_table("schema")
    op.drop_table("database")
    op.drop_table("servers")
    op.drop_table("installation")
    op.drop_table("user")
    op.drop_table("server_credentials")
    op.drop_table("database_connection")
    op.drop_table("access_rule")
    op.drop_table("submodule")
    op.drop_table("secret")
    op.drop_table("group")
    op.drop_table("access_owner_type")
    op.drop_table("access_object_type")
    # ### end Alembic commands ###
